<div class="cart-container-{{ section.id }}">

{% if cart.item_count > 0 %}
  <form action="/cart" method="post" novalidate>
    <table>
      <thead>
        <th>ITEM</th>
        <th>QTY</th>
        <th>TOTAL</th>
        <th></th>
      </thead>
      <tbody>
        {% for item in cart.items %}
          <tr>
            <td>
              <a href="{{ item.variant.url }}">
                {{ item.variant.product.title }}
                {% if item.variant.title != "Default Title" %}
                  <br>({{ item.variant.title }})
                {% endif %}
              </a>
            </td>
            <td>
              <span class="quantity-cell">
                <span class="quantity-decrement">-</span>
                <span class="quantity-display" data-line-item-id="{{ item.key }}">{{ item.quantity }}</span>
                <span class="quantity-increment">+</span>
              </span>
            </td>
            <td>
              {% if item.original_line_price != item.line_price %}{{ item.original_line_price | money }}{% endif %}
                {{ item.line_price | money }}
              {% for discount in item.discounts %}{{ discount.title }}{% endfor %}
            </td>
            <td class="cart-remove remove-item-button" data-line-item-id="{{ item.key }}">
              <a>Remove</a>
            </td>
          </tr>
        {% endfor %}
      </tbody>
    </table>
    <div class="subtotal">
      <p>Sub Total : {{ cart.total_price | money_without_currency }} AU + Shipping</p>
      <button type="submit" name="checkout">CHECKOUT</button>
    </div>
  </form>
  
  <div class="shipping-calculator">
    <h4>Shipping Estimate</h4>
    <div id="shipping-calculator-form">
      <div class="shipping-calculator__input">
        <label for="address_country">COUNTRY</label>
        <select id="address_country" name="address[country]" data-default="{{ shop.country }}">{{ all_country_option_tags }}</select>
      </div>

      <div id="address_state_container" class="shipping-calculator__input" style="display:none;">
        <label for="address_state" id="address_state_label">STATE</label>
        <select id="address_state" name="address[province]"></select>
      </div>

      <div id="address_zip_container" class="shipping-calculator__input" style="display:none;">
        <label for="address_zip">POSTAL/ZIP</label>
        <input type="text" id="address_zip" name="address[zip]">
      </div>

      <button type="button" id="calculate-shipping" style="display:none;">CALCULATE SHIPPING</button>

      <div id="shipping-rates-container" style="display:none;">
        <ul id="shipping-rates-list"></ul>
      </div>

      <div id="shipping-errors-container" class="errors" style="display:none;">
        <h4>ERRORS</h4>
        <div id="shipping-errors"></div>
      </div>
    </div>
  </div>

{% else %}

  <div class="cart-empty">
    CART IS EMPTY
  </div>
  
{% endif %}

</div>

<script>

function removeItemFromCart(lineItemId) {
  fetch('/cart/update.js', {
    method: 'POST',
    headers: {
      'Content-Type': 'application/json'
    },
    body: JSON.stringify({
      updates: {
        [lineItemId]: 0
      }
    })
  })
  .then(response => response.json())
  .then(cart => {
    console.log("Item removed:", cart);
    window.location.reload();
  })
  .catch(error => {
    console.error("Error removing item:", error);
  });
};

function incrementItem(lineItemId) {
  const currentQuantity = parseInt(document.querySelector(`.quantity-display[data-line-item-id="${lineItemId}"]`).textContent);
  updateCart(lineItemId, currentQuantity + 1);
}

function decrementItem(lineItemId) {
  const button = document.querySelector(`.quantity-decrement[data-line-item-id="${lineItemId}"]`);
  if (button && button.classList.contains('disabled')) {
    return;
  }

  const currentQuantity = parseInt(document.querySelector(`.quantity-display[data-line-item-id="${lineItemId}"]`).textContent);
  if (currentQuantity > 1) {
    updateCart(lineItemId, currentQuantity - 1);
  } else {
    removeItemFromCart(lineItemId);
  }
}

function updateCart(lineItemId, newQuantity) {
  fetch('/cart/update.js', {
    method: 'POST',
    headers: {
      'Content-Type': 'application/json'
    },
    body: JSON.stringify({
      updates: {
        [lineItemId]: newQuantity
      }
    })
  })
  .then(response => response.json())
  .then(cart => {
    console.log("Cart updated:", cart);
    window.location.reload();
  })
  .catch(error => {
    console.error("Error updating cart:", error);
  });
}

document.addEventListener('DOMContentLoaded', function() {
  const removeButtons = document.querySelectorAll('.remove-item-button');
  removeButtons.forEach(function(button) {
    button.addEventListener('click', function(event) {
      const lineItemId = event.currentTarget.getAttribute('data-line-item-id');
      removeItemFromCart(lineItemId);
      button.innerHTML = "Removing ...";
    });
  });

  const incrementButtons = document.querySelectorAll('.quantity-increment');
  incrementButtons.forEach(function(button) {
    button.addEventListener('click', function(event) {
      const lineItemId = event.currentTarget.closest('tr').querySelector('.remove-item-button').getAttribute('data-line-item-id');
      incrementItem(lineItemId);
    });
  });

  const decrementButtons = document.querySelectorAll('.quantity-decrement');
  decrementButtons.forEach(function(button) {
    button.addEventListener('click', function(event) {
      const lineItemId = event.currentTarget.closest('tr').querySelector('.remove-item-button').getAttribute('data-line-item-id');
      decrementItem(lineItemId);
    });
  });
});
</script>

<script src="{{ 'shipping-calculator.js' | asset_url }}" defer="defer"></script>

{% style %}
.cart-container-{{ section.id }} {
  height: 100vh;
  width: 100vw;
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
  @media screen and (min-width: 320px) and (max-width: 767px) and (orientation: portrait) {
    width:96vw;
  }
}

.cart-container-{{ section.id }} td {
  background-color: {{settings.color-scheme-button-bg}};
  color:{{settings.color-scheme-button-text}};
  box-sizing: border-box;
  padding:1em;
  width:20vw;
  text-align: center;
  @media screen and (min-width: 320px) and (max-width: 767px) and (orientation: portrait) {
    width:24vw;
  }
}

.cart-container-{{ section.id }} tbody:nth-child(even) {
  
}

.cart-container-{{ section.id }} .subtotal {
  text-align: center;
  color: {{settings.color-scheme-text}};
}

.cart-container-{{ section.id }} button {
  background-color: {{settings.color-scheme-button-bg}};
  border: none;
  color: {{settings.color-scheme-button-text}};
  font-family: var(--font-body-family);
  font-weight:500;
  padding: 1em;
  text-align: center;
  text-decoration: none;
  display: inline-block;
  font-size: 100%;
  cursor: pointer;
  letter-spacing: var(--font-body-spacing);
}
.cart-container-{{ section.id }} button:hover {
  background-color:white;
  color:{{settings.color-scheme-text}};
}
.remove-item-button {
  cursor:pointer;
  z-index:2;
}
.remove-item-button:hover {
  background-color:white;
  color:{{settings.color-scheme-text}};
}

.quantity-increment,
.quantity-decrement {
  cursor: pointer;
  user-select: none;
  background-color: none;
  color: {{settings.color-scheme-button-text}};
  box-sizing:border-box;
  padding:1em;
}

.quantity-cell {
  white-space: nowrap;
}

.shipping-calculator {
  width: 100%;
  max-width: 400px;
  margin: 2em auto;
  text-align: center;
  position:fixed;
  bottom:0;
}

#shipping-calculator-form {
  margin-top:1em;
}

.shipping-calculator__input {
  margin-bottom: 1em;
}

.shipping-calculator label {
  display: block;
  margin-bottom: 0.5em;
  color: {{settings.color-scheme-text}};
  font-family: var(--font-body-family);
  font-weight: 500;
  font-size: 100%;
  letter-spacing: var(--font-body-spacing);
}

.shipping-calculator select,
.shipping-calculator input[type="text"] {
  width: 100%;
  padding: 0.75em 1em;
  box-sizing: border-box;
  font-family: var(--font-body-family);
  font-weight: 500;
  font-size: 100%;
  letter-spacing: var(--font-body-spacing);
  border: 1px solid {{ settings.color-scheme-text }};
  background-color: transparent;
  color: {{ settings.color-scheme-text }};
}

.shipping-calculator #calculate-shipping {
  width: 100%;
  margin-top: 1em;
}

.shipping-rates,
.errors {
  margin-top: 1em;
  padding: 1em;
  border: 1px solid #ccc;
}

.shipping-rates h4,
.errors h4 {
  margin-top: 0;
}

.shipping-rates ul,
.errors ul {
  list-style: none;
  padding: 0;
  margin: 0;
}

#shipping-rates-container {
  margin-top: 1em;
}

#shipping-rates-list {
  list-style: none;
  list-style-type: none;
  margin: 0;
  padding: 0;
  text-align: center;
}

.shipping-rates li {
  font-family: var(--font-body-family);
  font-weight: 500;
  font-size: 100%;
  letter-spacing: var(--font-body-spacing);
  color: {{ settings.color-scheme-text }};
  padding: 0.5em 0;
}

.errors li {
  color: red;
}
{% endstyle %}